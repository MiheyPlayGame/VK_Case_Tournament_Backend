"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""
from sqlalchemy.orm import Session
from app.database import SessionLocal, engine
from app.models.app import App
from app.models.category import Category
from app.models.screenshot import Screenshot
from app.database import Base
from app.utils.hash_utils import HashUtils

def create_categories():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π"""
    categories_data = [
        {
            "name": "–§–∏–Ω–∞–Ω—Å—ã",
            "description": "–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∫–æ—à–µ–ª—å–∫–∏, –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏"
        },
        {
            "name": "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã", 
            "description": "–ü–æ–ª–µ–∑–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã"
        },
        {
            "name": "–ò–≥—Ä—ã",
            "description": "–ú–æ–±–∏–ª—å–Ω—ã–µ –∏–≥—Ä—ã –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è"
        },
        {
            "name": "–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ",
            "description": "–ì–æ—Å—É—Å–ª—É–≥–∏ –∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
        },
        {
            "name": "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç",
            "description": "–¢–∞–∫—Å–∏, –∫–∞—Ä—à–µ—Ä–∏–Ω–≥, –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç"
        }
    ]
    
    db = SessionLocal()
    try:
        for cat_data in categories_data:
            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Ö–µ—à–∞
            category = Category(**cat_data)
            category_dict = HashUtils.get_data_for_hash(category)
            expected_hash = HashUtils.calculate_category_hash(category_dict)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å —Ç–∞–∫–∏–º —Ö–µ—à–µ–º
            existing_by_hash = db.query(Category).filter(Category.data_hash == expected_hash).first()
            if existing_by_hash:
                print(f"   ‚ö†Ô∏è  –ö–∞—Ç–µ–≥–æ—Ä–∏—è '{cat_data['name']}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–ø—Ä–æ–ø—É—Å–∫–∞–µ–º)")
            else:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º, –Ω–æ —Å –¥—Ä—É–≥–∏–º —Ö–µ—à–µ–º
                existing_by_name = db.query(Category).filter(Category.name == cat_data["name"]).first()
                if existing_by_name:
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
                    existing_by_name.description = cat_data["description"]
                    existing_by_name.data_hash = expected_hash
                    print(f"   üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {cat_data['name']}")
                else:
                    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
                    category.data_hash = expected_hash  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ö–µ—à –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
                    db.add(category)
                    db.flush()  # –ü–æ–ª—É—á–∞–µ–º ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                    print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {cat_data['name']}")
        
        db.commit()
        print("‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {e}")
        db.rollback()
    finally:
        db.close()

def create_apps():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π"""
    db = SessionLocal()
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        categories = db.query(Category).all()
        category_map = {cat.name: cat.id for cat in categories}
        
        apps_data = [
            {
                "name": "–°–±–µ—Ä–±–∞–Ω–∫ –û–Ω–ª–∞–π–Ω",
                "description": "–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –°–±–µ—Ä–±–∞–Ω–∫–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏, –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏ –∏ –ø–ª–∞—Ç–µ–∂–∞–º–∏. –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –∫–∞—Ä—Ç–∞–º–∏ –∏ –≤–∫–ª–∞–¥–∞–º–∏.",
                "short_description": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏ –∏ –∫–∞—Ä—Ç–∞–º–∏",
                "company": "–°–±–µ—Ä–±–∞–Ω–∫",
                "icon_url": "https://example.com/sberbank-icon.png",
                "header_image_url": "https://example.com/sberbank-header.png",
                "category_name": "–§–∏–Ω–∞–Ω—Å—ã",
                "age_rating": "0+",
                "apk_url": "https://example.com/sberbank.apk",
                "screenshots": [
                    "https://example.com/sberbank-1.png",
                    "https://example.com/sberbank-2.png",
                    "https://example.com/sberbank-3.png"
                ]
            },
            {
                "name": "–í–¢–ë –û–Ω–ª–∞–π–Ω",
                "description": "–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –í–¢–ë –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –±–∞–Ω–∫–∏–Ω–≥–∞. –ü–µ—Ä–µ–≤–æ–¥—ã, –ø–ª–∞—Ç–µ–∂–∏, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–∞–º–∏ –∏ –≤–∫–ª–∞–¥–∞–º–∏.",
                "short_description": "–ú–æ–±–∏–ª—å–Ω—ã–π –±–∞–Ω–∫ –í–¢–ë",
                "company": "–í–¢–ë",
                "icon_url": "https://example.com/vtb-icon.png",
                "header_image_url": "https://example.com/vtb-header.png",
                "category_name": "–§–∏–Ω–∞–Ω—Å—ã",
                "age_rating": "0+",
                "apk_url": "https://example.com/vtb.apk",
                "screenshots": [
                    "https://example.com/vtb-1.png",
                    "https://example.com/vtb-2.png"
                ]
            },
            {
                "name": "–ì–æ—Å—É—Å–ª—É–≥–∏",
                "description": "–ï–¥–∏–Ω—ã–π –ø–æ—Ä—Ç–∞–ª –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö —É—Å–ª—É–≥. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–æ–∫, –∑–∞–ø–∏—Å—å –∫ –≤—Ä–∞—á—É, –æ–ø–ª–∞—Ç–∞ —à—Ç—Ä–∞—Ñ–æ–≤ –∏ –Ω–∞–ª–æ–≥–æ–≤.",
                "short_description": "–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏ –æ–Ω–ª–∞–π–Ω",
                "company": "–ú–∏–Ω—Ü–∏—Ñ—Ä—ã –†–æ—Å—Å–∏–∏",
                "icon_url": "https://example.com/gosuslugi-icon.png",
                "header_image_url": "https://example.com/gosuslugi-header.png",
                "category_name": "–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ",
                "age_rating": "0+",
                "apk_url": "https://example.com/gosuslugi.apk",
                "screenshots": [
                    "https://example.com/gosuslugi-1.png",
                    "https://example.com/gosuslugi-2.png",
                    "https://example.com/gosuslugi-3.png",
                    "https://example.com/gosuslugi-4.png"
                ]
            },
            {
                "name": "–Ø–Ω–¥–µ–∫—Å.–¢–∞–∫—Å–∏",
                "description": "–ó–∞–∫–∞–∑ —Ç–∞–∫—Å–∏ –≤ –ª—é–±–æ–º –≥–æ—Ä–æ–¥–µ –†–æ—Å—Å–∏–∏. –ë—ã—Å—Ç—Ä–æ, —É–¥–æ–±–Ω–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ. –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ–µ–∑–¥–∫–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.",
                "short_description": "–ó–∞–∫–∞–∑ —Ç–∞–∫—Å–∏ –æ–Ω–ª–∞–π–Ω",
                "company": "–Ø–Ω–¥–µ–∫—Å",
                "icon_url": "https://example.com/yandex-taxi-icon.png",
                "header_image_url": "https://example.com/yandex-taxi-header.png",
                "category_name": "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç",
                "age_rating": "0+",
                "apk_url": "https://example.com/yandex-taxi.apk",
                "screenshots": [
                    "https://example.com/yandex-taxi-1.png",
                    "https://example.com/yandex-taxi-2.png"
                ]
            },
            {
                "name": "Telegram",
                "description": "–ë—ã—Å—Ç—Ä—ã–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä. –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π, —Ñ–∞–π–ª–æ–≤, –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∏ –≤–∏–¥–µ–æ–∑–≤–æ–Ω–∫–æ–≤.",
                "short_description": "–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä",
                "company": "Telegram FZ-LLC",
                "icon_url": "https://example.com/telegram-icon.png",
                "header_image_url": "https://example.com/telegram-header.png",
                "category_name": "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã",
                "age_rating": "12+",
                "apk_url": "https://example.com/telegram.apk",
                "screenshots": [
                    "https://example.com/telegram-1.png",
                    "https://example.com/telegram-2.png",
                    "https://example.com/telegram-3.png"
                ]
            },
            {
                "name": "2048",
                "description": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –≥–æ–ª–æ–≤–æ–ª–æ–º–∫–∞ —Å —á–∏—Å–ª–∞–º–∏. –û–±—ä–µ–¥–∏–Ω—è–π—Ç–µ –ø–ª–∏—Ç–∫–∏ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ —á–∏—Å–ª–∞–º–∏, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å 2048!",
                "short_description": "–ì–æ–ª–æ–≤–æ–ª–æ–º–∫–∞ —Å —á–∏—Å–ª–∞–º–∏",
                "company": "Gabriele Cirulli",
                "icon_url": "https://example.com/2048-icon.png",
                "header_image_url": "https://example.com/2048-header.png",
                "category_name": "–ò–≥—Ä—ã",
                "age_rating": "0+",
                "apk_url": "https://example.com/2048.apk",
                "screenshots": [
                    "https://example.com/2048-1.png",
                    "https://example.com/2048-2.png"
                ]
            }
        ]
        
        for app_data in apps_data:
            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Ö–µ—à–∞
            app = App(
                name=app_data["name"],
                description=app_data["description"],
                short_description=app_data["short_description"],
                company=app_data["company"],
                icon_url=app_data["icon_url"],
                header_image_url=app_data["header_image_url"],
                category_id=category_map[app_data["category_name"]],
                age_rating=app_data["age_rating"],
                apk_url=app_data["apk_url"]
            )
            app_dict = HashUtils.get_data_for_hash(app)
            expected_hash = HashUtils.calculate_app_hash(app_dict)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å —Ç–∞–∫–∏–º —Ö–µ—à–µ–º
            existing_by_hash = db.query(App).filter(App.data_hash == expected_hash).first()
            if existing_by_hash:
                print(f"   ‚ö†Ô∏è  –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ '{app_data['name']}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–ø—Ä–æ–ø—É—Å–∫–∞–µ–º)")
            else:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º, –Ω–æ —Å –¥—Ä—É–≥–∏–º —Ö–µ—à–µ–º
                existing_by_name = db.query(App).filter(App.name == app_data["name"]).first()
                if existing_by_name:
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                    existing_by_name.description = app_data["description"]
                    existing_by_name.short_description = app_data["short_description"]
                    existing_by_name.company = app_data["company"]
                    existing_by_name.icon_url = app_data["icon_url"]
                    existing_by_name.header_image_url = app_data["header_image_url"]
                    existing_by_name.category_id = category_map[app_data["category_name"]]
                    existing_by_name.age_rating = app_data["age_rating"]
                    existing_by_name.apk_url = app_data["apk_url"]
                    existing_by_name.data_hash = expected_hash
                    
                    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã
                    db.query(Screenshot).filter(Screenshot.app_id == existing_by_name.id).delete()
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã
                    for i, screenshot_url in enumerate(app_data["screenshots"]):
                        screenshot = Screenshot(
                            app_id=existing_by_name.id,
                            image_url=screenshot_url,
                            order_index=i
                        )
                        db.add(screenshot)
                    
                    print(f"   üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: {app_data['name']}")
                else:
                    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                    app.data_hash = expected_hash  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ö–µ—à –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
                    
                    db.add(app)
                    db.flush()  # –ü–æ–ª—É—á–∞–µ–º ID –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç—ã
                    for i, screenshot_url in enumerate(app_data["screenshots"]):
                        screenshot = Screenshot(
                            app_id=app.id,
                            image_url=screenshot_url,
                            order_index=i
                        )
                        db.add(screenshot)
                    
                    print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: {app_data['name']}")
        
        db.commit()
        print("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π: {e}")
        db.rollback()
    finally:
        db.close()

def seed_database():
    """–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    print("–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
    Base.metadata.create_all(bind=engine)
    print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")
    
    # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    create_categories()
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    create_apps()
    
    print("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!")

if __name__ == "__main__":
    seed_database()
